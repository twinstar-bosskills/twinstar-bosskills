/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType, Insertable, Selectable } from "kysely";

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export interface MigrationsTable {
  id: Generated<number>;
  name: string;
  executed_at: Date;
}

export interface BossTable {
  id: Generated<number>;
  name: string;
  position: Generated<number>;
  raid_id: number;
  remote_id: number;
}

export interface BossKillTable {
  boss_id: number;
  deaths: number;
  guild: string;
  id: Generated<number>;
  length: number;
  mode: number;
  raid_id: number;
  realm_id: number;
  remote_id: string;
  ress_used: number;
  time: string;
  wipes: number;
}

export interface BossKillDeathTable {
  boss_kill_id: number;
  id: Generated<number>;
  is_ress: number;
  player_id: number;
  remote_id: number;
  time: number;
}

export interface BossKillLootTable {
  boss_kill_id: number;
  count: number;
  id: Generated<number>;
  item_id: number;
}

export interface BossKillPlayerTable {
  absorb_done: number;
  avg_item_lvl: number;
  boss_kill_id: number;
  class: number;
  dispells: number;
  dmg_absorbed: number;
  dmg_done: number;
  dmg_taken: number;
  gender: number;
  guid: number;
  healing_done: number;
  healing_taken: number;
  id: Generated<number>;
  interrupts: number;
  level: number;
  name: string;
  overhealing_done: number;
  player_id: number;
  race: number;
  talent_spec: number;
}

export interface BossKillTimelineTable {
  boss_kill_id: number;
  encounterDamage: number;
  encounterHeal: number;
  id: Generated<number>;
  raidDamage: number;
  raidHeal: number;
  time: number;
}

export interface BossPropTable {
  boss_id: number;
  health: number;
  id: Generated<number>;
  mode: number;
}

export interface PlayerTable {
  id: Generated<number>;
  name: Generated<string | null>;
  realm_id: number;
  remote_id: Generated<number | null>;
}

export interface RaidTable {
  id: Generated<number>;
  name: string;
  position: Generated<number>;
}

export interface RankingTable {
  boss_id: number;
  boss_kill_id: number;
  id: Generated<number>;
  metric: "dps" | "hps";
  mode: number;
  player_id: number;
  raid_id: number;
  rank: number;
  realm_id: number;
  spec: number;
  time: Date;
}

export interface RealmTable {
  expansion: number;
  id: Generated<number>;
  merged_to_id: Generated<number | null>;
  name: string;
}

export interface RealmXRaidTable {
  raid_id: number;
  realm_id: number;
}

export interface DB {
  migrations: MigrationsTable;
  boss: BossTable;
  boss_kill: BossKillTable;
  boss_kill_death: BossKillDeathTable;
  boss_kill_loot: BossKillLootTable;
  boss_kill_player: BossKillPlayerTable;
  boss_kill_timeline: BossKillTimelineTable;
  boss_prop: BossPropTable;
  player: PlayerTable;
  raid: RaidTable;
  ranking: RankingTable;
  realm: RealmTable;
  realm_x_raid: RealmXRaidTable;
}

export type Raid = Selectable<RaidTable>;
export type Boss = Selectable<BossTable>;
export type Player = Selectable<PlayerTable>;
export type BossProp = Selectable<BossPropTable>;
export type BossKillLoot = Selectable<BossKillLootTable>;
export type BossKill = Selectable<BossKillTable>;

export type RankingInsert = Insertable<RankingTable>;
